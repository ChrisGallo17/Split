{"ast":null,"code":"var _jsxFileName = \"/Users/chrisgallo/Documents/newmac/src/components/recordList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { Table, TableRow, TableCell, TableContainer, TableHead, TableBody, Paper } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Record = (record, deleteRecord, key) =>\n/*#__PURE__*/\n// <tr>\n//   <td>{record.person_name}</td>\n//   <td>{record.person_position}</td>\n//   <td>{record.person_level}</td>\n//   <td>\n//     <Link to={\"/edit/\" + record._id}>Edit</Link> |\n//     <a\n//       href=\"/\"\n//       onClick={() => {\n//         deleteRecord(record._id);\n//       }}\n//     >\n//       Delete\n//     </a>\n//   </td>\n// </tr>\n_jsxDEV(TableRow, {\n  sx: {\n    '&:last-child td, &:last-child th': {\n      border: 0\n    }\n  },\n  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n    align: \"right\",\n    children: record.person_name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n    align: \"right\",\n    children: record.person_position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n    align: \"right\",\n    children: record.person_level\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n    align: \"right\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/edit/\" + record._id,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      onClick: () => {\n        deleteRecord(record._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)]\n}, record._id, true, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this);\n\n_c = Record;\nexport default function RecordList(props) {\n  _s();\n\n  // This is the constructor that shall store our data retrieved from the database\n  // const [deleteRecord, setDeleteRecord] = useState('')\n  const [records, setRecords] = useState([]); // const [state, setState] = useState(records)\n  // This method will get the data from the database.\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/record/\").then(response => {\n      setRecords(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }); // This method will delete a record based on the method\n\n  const deleteRecord = id => {\n    console.log(\"id: \", id);\n    axios.delete(\"http://localhost:5000/\" + id).then(response => {\n      console.log(response.data);\n    });\n    setRecords(records.filter(el => el._id !== id));\n  }; // This method will map out the users on the table\n\n\n  const recordList = () => {\n    return records.map(currentrecord => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: currentrecord,\n        deleteRecord: deleteRecord\n      }, currentrecord._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    });\n  }; // This following section will display the table with the records of individuals.\n\n\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <h3>Record List</h3>\n    //   <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n    //     <thead>\n    //       <tr>\n    //         <th>Name</th>\n    //         <th>Position</th>\n    //         <th>Level</th>\n    //         <th>Action</th>\n    //       </tr>\n    //     </thead>\n    //     <tbody>{recordList}</tbody>\n    //   </table>\n    // </div>\n    _jsxDEV(TableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Record List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(RecordList, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n\n_c2 = RecordList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Record\");\n$RefreshReg$(_c2, \"RecordList\");","map":{"version":3,"sources":["/Users/chrisgallo/Documents/newmac/src/components/recordList.js"],"names":["React","Component","useEffect","useState","axios","Link","Table","TableRow","TableCell","TableContainer","TableHead","TableBody","Paper","Record","record","deleteRecord","key","border","person_name","person_position","person_level","_id","RecordList","props","records","setRecords","get","then","response","data","catch","error","console","log","id","delete","filter","el","recordList","map","currentrecord","minWidth"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport { Table, TableRow, TableCell, TableContainer, TableHead, TableBody, Paper } from \"@material-ui/core\";\n\nconst Record = (record, deleteRecord, key) => (\n  // <tr>\n  //   <td>{record.person_name}</td>\n  //   <td>{record.person_position}</td>\n  //   <td>{record.person_level}</td>\n  //   <td>\n  //     <Link to={\"/edit/\" + record._id}>Edit</Link> |\n  //     <a\n  //       href=\"/\"\n  //       onClick={() => {\n  //         deleteRecord(record._id);\n  //       }}\n  //     >\n  //       Delete\n  //     </a>\n  //   </td>\n  // </tr>\n  <TableRow\n    key={record._id}\n    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n  >\n    {/* <TableCell component=\"th\" scope=\"row\">\n      {row.name}\n    </TableCell> */}\n    <TableCell align=\"right\">{record.person_name}</TableCell>\n    <TableCell align=\"right\">{record.person_position}</TableCell>\n    <TableCell align=\"right\">{record.person_level}</TableCell>\n    <TableCell align=\"right\">\n      <Link to={\"/edit/\" + record._id}>Edit</Link> |\n      <a\n        href=\"/\"\n        onClick={() => {\n          deleteRecord(record._id);\n        }}\n      >\n        Delete\n      </a>\n    </TableCell>\n  </TableRow>\n);\n\nexport default function RecordList(props) {\n  // This is the constructor that shall store our data retrieved from the database\n  // const [deleteRecord, setDeleteRecord] = useState('')\n  const [records, setRecords] = useState([])\n  // const [state, setState] = useState(records)\n\n  // This method will get the data from the database.\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/record/\")\n      .then((response) => {\n        setRecords(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  });\n\n  // This method will delete a record based on the method\n  const deleteRecord = (id) => {\n    console.log(\"id: \", id)\n    axios.delete(\"http://localhost:5000/\" + id).then((response) => {\n      console.log(response.data);\n    });\n    setRecords(records.filter((el) => el._id !== id));\n  }\n\n  // This method will map out the users on the table\n  const recordList = () => {\n    return records.map((currentrecord) => {\n      return (\n        <Record\n          record={currentrecord}\n          deleteRecord={deleteRecord}\n          key={currentrecord._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return (\n    // <div>\n    //   <h3>Record List</h3>\n    //   <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n    //     <thead>\n    //       <tr>\n    //         <th>Name</th>\n    //         <th>Position</th>\n    //         <th>Level</th>\n    //         <th>Action</th>\n    //       </tr>\n    //     </thead>\n    //     <tbody>{recordList}</tbody>\n    //   </table>\n    // </div>\n    <TableContainer component={Paper}>\n    <h3>Record List</h3>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Name</TableCell>\n            <TableCell>Position</TableCell>\n            <TableCell>Level</TableCell>\n            <TableCell>Action</TableCell>\n            {/* <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell> */}\n          </TableRow>\n        </TableHead>\n        <TableBody>{recordList}</TableBody>\n      </Table>\n    </TableContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}