{"ast":null,"code":"var _jsxFileName = \"/Users/chrisgallo/Documents/GitHub/Split/src/components/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { Add } from '@material-ui/icons';\nimport { TextField, Radio, RadioGroup, FormControl, FormControlLabel, FormLabel, Button } from \"@material-ui/core\"; // import { LocalizationProvider, DesktopDatePicker } from \"@mui/lab\";\n// import DateAdapter from '@mui/lab/AdapterDateFns';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Create(props) {\n  _s();\n\n  const [personName, setPersonName] = useState('');\n  const [personPosition, setPersonPosition] = useState('');\n  const [personLevel, setPersonLevel] = useState('');\n  const [eventName, setEventName] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  const [eventDate, setEventDate] = useState(React.useState(new Date('2014-08-18T21:11:54')));\n\n  const handleChange = position => {\n    if (position === \"Intern\") {\n      console.log(position);\n      setPersonLevel(\"Intern\");\n    } else if (position === \"Junior\") {\n      console.log(position);\n      setPersonLevel(\"Junior\");\n    } else {\n      console.log(position);\n      setPersonLevel(\"Senior\");\n    }\n  }; // This function will handle the submission.\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // When post request is sent to the create url, axios will add a new record(newperson) to the database.\n    // const newperson = {\n    //   person_name: personName,\n    //   person_position: personPosition,\n    //   person_level: personLevel,\n    // };\n    // console.log(newperson);\n\n    const newEvent = {\n      event_name: eventName,\n      event_description: eventDescription,\n      event_date: eventDate\n    };\n    console.log(newEvent); // axios\n    //   .post(\"http://localhost:5000/record/add\", newperson)\n    //   .then((res) => console.log(res.data));\n\n    axios.post(\"http://localhost:5000/Events/add\", newEvent).then(res => console.log(res.data)); // We will empty the state after posting the data to the database\n\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setEventDate(\"\");\n  }; // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            color: \"white\",\n            marginBottom: 15\n          },\n          label: \"Name of Event:\",\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"text\",\n          className: \"form-control\",\n          value: eventName,\n          onChange: e => setEventName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            color: \"white\",\n            marginBottom: 15\n          },\n          label: \"Event Description:\",\n          multiline: true,\n          rows: 4,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"text\",\n          className: \"form-control\",\n          value: eventDescription,\n          onChange: e => setEventDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"eventdate\",\n        label: \"Event Date\",\n        type: \"date\",\n        variant: \"outlined\",\n        sx: {\n          width: 220\n        },\n        InputLabelProps: {\n          shrink: true\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: '15px'\n          },\n          variant: \"contained\",\n          type: \"submit\",\n          value: \"Create person\",\n          className: \"btn btn-primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 26\n          }, this),\n          children: \"Create Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Create, \"g96JZxEVIz0bEab1Rqd/CCSGGZE=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/chrisgallo/Documents/GitHub/Split/src/components/create.js"],"names":["React","useState","axios","Add","TextField","Radio","RadioGroup","FormControl","FormControlLabel","FormLabel","Button","Create","props","personName","setPersonName","personPosition","setPersonPosition","personLevel","setPersonLevel","eventName","setEventName","eventDescription","setEventDescription","eventDate","setEventDate","Date","handleChange","position","console","log","handleSubmit","e","preventDefault","newEvent","event_name","event_description","event_date","post","then","res","data","marginTop","color","marginBottom","target","value","width","shrink"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport { Add } from '@material-ui/icons';\nimport { TextField, Radio, RadioGroup, FormControl, FormControlLabel, FormLabel, Button } from \"@material-ui/core\";\n// import { LocalizationProvider, DesktopDatePicker } from \"@mui/lab\";\n// import DateAdapter from '@mui/lab/AdapterDateFns';\n \nfunction Create(props) {\n  const [personName, setPersonName] = useState('');\n  const [personPosition, setPersonPosition] = useState('');\n  const [personLevel, setPersonLevel] = useState('');\n  \n  const [eventName, setEventName] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  const [eventDate, setEventDate] = useState(React.useState(new Date('2014-08-18T21:11:54')));\n\n\n  const handleChange = (position) => {\n    if (position === \"Intern\") {\n      console.log(position)\n      setPersonLevel(\"Intern\")\n    } else if (position === \"Junior\") {\n      console.log(position)\n      setPersonLevel(\"Junior\")\n    } else {\n      console.log(position)\n      setPersonLevel(\"Senior\")\n    }\n  };\n \n\t// This function will handle the submission.\n\tconst handleSubmit = (e) => {\n    e.preventDefault();\n    // When post request is sent to the create url, axios will add a new record(newperson) to the database.\n    // const newperson = {\n    //   person_name: personName,\n    //   person_position: personPosition,\n    //   person_level: personLevel,\n    // };\n\t\t// console.log(newperson);\n\n    const newEvent = {\n      event_name: eventName, \n      event_description: eventDescription,\n      event_date: eventDate,\n    }\n    console.log(newEvent)\n\n    // axios\n    //   .post(\"http://localhost:5000/record/add\", newperson)\n    //   .then((res) => console.log(res.data));\n    axios\n      .post(\"http://localhost:5000/Events/add\", newEvent)\n      .then((res) => console.log(res.data));\n \n    // We will empty the state after posting the data to the database\n\t\tsetEventName(\"\");\n\t\tsetEventDescription(\"\");\n\t\tsetEventDate(\"\");\n  }\n \n  // This following section will display the form that takes the input from the user.\n    return (\n      <div style={{ marginTop: 20 }}>\n        <h3>Create New Event</h3>\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <TextField\n              style={{color: \"white\", marginBottom: 15}}\n              label=\"Name of Event:\"\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              className=\"form-control\"\n              value={eventName}\n              onChange={e => setEventName(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <TextField\n              style={{color: \"white\", marginBottom: 15}}\n              label=\"Event Description:\"\n              multiline\n              rows={4}\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              className=\"form-control\"\n              value={eventDescription}\n              onChange={e => setEventDescription(e.target.value)}\n              required\n            />\n          </div>\n          {/* <div className=\"form-group\">\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">Position</FormLabel>\n              <RadioGroup onChange={ e => handleChange(e.target.value)} defaultValue=\"Intern\" aria-label=\"position\" name=\"customized-radios\">\n                <FormControlLabel value=\"Intern\" control={<Radio />} label=\"Intern\" />\n                <FormControlLabel value=\"Junior\" control={<Radio />} label=\"Junior\" />\n                <FormControlLabel value=\"Senior\" control={<Radio />} label=\"Senior\" />\n              </RadioGroup>\n            </FormControl>\n          </div> */}\n          {/* <LocalizationProvider dateAdapter={DateAdapter}>\n            <DesktopDatePicker\n              label=\"Event Date\"\n              inputFormat=\"MM/dd/yyyy\"\n              value={eventDate}\n              onChange={e => setEventDate(e.target.value)}\n              renderInput={(params) => <TextField {...params} />}\n              required\n            />\n          </LocalizationProvider> */}\n          <TextField\n            id=\"eventdate\"\n            label=\"Event Date\"\n            type=\"date\"\n            variant=\"outlined\"\n            sx={{ width: 220 }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            required\n          />\n          <div className=\"form-group\">\n            <Button \n              style={{marginTop: '15px'}}\n              variant=\"contained\" \n              type=\"submit\"\n              value=\"Create person\"\n              className=\"btn btn-primary\"\n              startIcon={<Add />}>\n              Create Person\n            </Button>\n          </div>\n        </form>\n      </div>\n    );\n}\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}