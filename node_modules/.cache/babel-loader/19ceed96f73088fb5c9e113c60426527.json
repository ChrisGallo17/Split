{"ast":null,"code":"var _jsxFileName = \"/Users/chrisgallo/Documents/GitHub/Split/src/components/eventList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Add, AddLocation, Comment, PanTool, PanToolOutlined, PersonAdd, Place, TagFaces } from '@material-ui/icons';\nimport { NavLink } from \"react-router-dom\";\nimport { Chip, Fab, Grid, Typography } from \"@material-ui/core\";\nimport { Card, CardHeader, CardContent, CardMedia, CardActions, Avatar, IconButton, Container } from \"@material-ui/core\";\nimport { Delete, MoreVert, Favorite, Share } from \"@material-ui/icons\";\nimport ChipsArray from \"./chips\";\nimport EventMenu from \"./eventMenu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventList() {\n  _s();\n\n  // This is the constructor that shall store our data retrieved from the database\n  const url = \"http://localhost:5000/event/\";\n  const [events, setEvents] = useState([]);\n  const [willAttend, setWillAttend] = useState(false); // const [noEvents, setNoEvents] = useState(false)\n\n  const onClickWillAttend = () => setWillAttend(prevWillAttend => !prevWillAttend); // This method will get the data from the database.\n\n\n  useEffect(() => {\n    axios.get(url).then(response => {\n      setEvents(response.data); // console.log(response.data);\n      // if (response.data.length > 0) {\n      //   setNoEvents(false)\n      // } else {\n      //   setNoEvents(true)\n      // }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []); // This method will delete an event based on the method\n\n  const deleteEvent = id => {\n    if (window.confirm(\"Do you want to delete this event?\")) {\n      console.log(\"id: \", id);\n      axios.delete(\"http://localhost:5000/\" + id).then(response => {\n        console.log(response.data);\n      });\n      setEvents(events.filter(el => el._id !== id));\n    }\n  }; // console.log(noEvents)\n  // This following section will display the table with the records of individuals.\n  // if (noEvents) {\n  //   return (\n  //     <div>\n  //       <Typography variant=\"h5\" style={{ marginTop: '25px' }}>\n  //         Looks like there's no events, plan one\n  //       </Typography>\n  //       <NavLink to=\"/create\">\n  //         <Fab color=\"secondary\" variant=\"extended\" style={{position: 'relative', margin: 15}}> \n  //           <Add />\n  //           Create Event\n  //         </Fab>\n  //       </NavLink>\n  //     </div>\n  //   )\n  // } else {\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [events.map(currentevent => /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      style: {\n        marginTop: '15px',\n        textAlign: \"left\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          maxWidth: 345\n        },\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            \"aria-label\": \"recipe\",\n            children: \"CG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this),\n          action:\n          /*#__PURE__*/\n          // <IconButton aria-label=\"settings\">\n          _jsxDEV(EventMenu, {\n            currentevent: currentevent,\n            deleteEvent: deleteEvent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this) // </IconButton>\n          ,\n          title: currentevent.event_name,\n          subheader: currentevent.event_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"194\",\n          src: \"https://s3-media0.fl.yelpcdn.com/bphoto/4xekxff-5mjxc_9VaHA2hQ/o.jpg\",\n          alt: \"Bowling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Place, {\n                fontSize: \"small\",\n                style: {\n                  marginRight: \"5px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                style: {\n                  top: 0\n                },\n                children: currentevent.event_location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: currentevent.event_description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: \"auto\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"attend\",\n                onClick: onClickWillAttend,\n                children: willAttend ? /*#__PURE__*/_jsxDEV(PanToolOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 38\n                }, this) : /*#__PURE__*/_jsxDEV(PanTool, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 60\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"chat\",\n                children: /*#__PURE__*/_jsxDEV(Comment, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), currentevent.friends_invited && /*#__PURE__*/_jsxDEV(Container, {\n          children: currentevent.friends_invited.map(data => {\n            return /*#__PURE__*/_jsxDEV(Chip, {\n              icon: /*#__PURE__*/_jsxDEV(TagFaces, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 35\n              }, this),\n              label: data.key,\n              style: {\n                margin: '5px',\n                marginBottom: \"15px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, currentevent._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/create\",\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        color: \"secondary\",\n        variant: \"extended\",\n        style: {\n          position: 'relative',\n          margin: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), \"Create Event\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }, this); // }\n}\n\n_s(EventList, \"cZv23oSG8tHL9iKK3r0BgFQo2jQ=\");\n\n_c = EventList;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"sources":["/Users/chrisgallo/Documents/GitHub/Split/src/components/eventList.js"],"names":["React","useEffect","useState","axios","Add","AddLocation","Comment","PanTool","PanToolOutlined","PersonAdd","Place","TagFaces","NavLink","Chip","Fab","Grid","Typography","Card","CardHeader","CardContent","CardMedia","CardActions","Avatar","IconButton","Container","Delete","MoreVert","Favorite","Share","ChipsArray","EventMenu","EventList","url","events","setEvents","willAttend","setWillAttend","onClickWillAttend","prevWillAttend","get","then","response","data","catch","error","console","log","deleteEvent","id","window","confirm","delete","filter","el","_id","map","currentevent","marginTop","textAlign","maxWidth","event_name","event_date","display","marginRight","top","event_location","event_description","friends_invited","key","margin","marginBottom","position"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Add, AddLocation, Comment, PanTool, PanToolOutlined, PersonAdd, Place, TagFaces } from '@material-ui/icons';\nimport { NavLink } from \"react-router-dom\";\nimport { Chip, Fab, Grid, Typography } from \"@material-ui/core\";\nimport { Card, CardHeader, CardContent, CardMedia, CardActions, Avatar, IconButton, Container } from \"@material-ui/core\";\nimport { Delete, MoreVert, Favorite, Share } from \"@material-ui/icons\";\nimport ChipsArray from \"./chips\";\nimport EventMenu from \"./eventMenu\";\n\nexport default function EventList() {\n  // This is the constructor that shall store our data retrieved from the database\n  const url = \"http://localhost:5000/event/\"\n  const [events, setEvents] = useState([])\n  const [willAttend, setWillAttend] = useState(false)\n  // const [noEvents, setNoEvents] = useState(false)\n\n\n  const onClickWillAttend = () => setWillAttend((prevWillAttend) => ! prevWillAttend)\n  // This method will get the data from the database.\n  useEffect(() => {\n    axios\n      .get(url)\n      .then((response) => {\n        setEvents(response.data);\n        // console.log(response.data);\n        // if (response.data.length > 0) {\n        //   setNoEvents(false)\n        // } else {\n        //   setNoEvents(true)\n        // }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  // This method will delete an event based on the method\n  const deleteEvent = (id) => {\n    if (window.confirm(\"Do you want to delete this event?\")){\n      console.log(\"id: \", id)\n      axios.delete(\"http://localhost:5000/\" + id).then((response) => {\n        console.log(response.data);\n      });\n      setEvents(events.filter((el) => el._id !== id));\n    }\n  }\n\n  // console.log(noEvents)\n  // This following section will display the table with the records of individuals.\n  // if (noEvents) {\n  //   return (\n  //     <div>\n  //       <Typography variant=\"h5\" style={{ marginTop: '25px' }}>\n  //         Looks like there's no events, plan one\n  //       </Typography>\n  //       <NavLink to=\"/create\">\n  //         <Fab color=\"secondary\" variant=\"extended\" style={{position: 'relative', margin: 15}}> \n  //           <Add />\n  //           Create Event\n  //         </Fab>\n  //       </NavLink>\n  //     </div>\n\n  //   )\n  // } else {\n    return (\n      <div>\n        {events.map((currentevent) => (\n          <Container maxWidth=\"sm\" style={{ marginTop: '15px', textAlign: \"left\" }} key={currentevent._id}>\n            <Card sx={{ maxWidth: 345 }}>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"recipe\">\n                    CG\n                  </Avatar>\n                }\n                action={\n                  // <IconButton aria-label=\"settings\">\n                    <EventMenu currentevent={currentevent} deleteEvent={deleteEvent} />\n                  // </IconButton>\n                }\n                title={currentevent.event_name}\n                subheader={currentevent.event_date}\n              />\n              <CardMedia\n                component=\"img\"\n                height=\"194\"\n                src={\"https://s3-media0.fl.yelpcdn.com/bphoto/4xekxff-5mjxc_9VaHA2hQ/o.jpg\"}\n                alt=\"Bowling\"\n              />\n              <CardContent>\n                <Grid container spacing={2} style={{ display: \"flex\" }}>\n                  <Grid item >\n                    <Place fontSize=\"small\" style={{ marginRight: \"5px\" }}/>\n                    <Typography variant=\"body2\" style={{ top: 0 }}>\n                      {currentevent.event_location}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                      {currentevent.event_description}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs=\"auto\">\n                    <IconButton aria-label=\"attend\" onClick={onClickWillAttend}>\n                      { willAttend ? <PanToolOutlined /> : <PanTool /> }\n                    </IconButton>\n                    <IconButton aria-label=\"chat\">\n                      <Comment />\n                    </IconButton>\n                    {/* <CardActions disableSpacing> */}\n                    {/* </CardActions> */}\n                  </Grid>\n                </Grid>\n              </CardContent>\n              {currentevent.friends_invited &&\n                <Container>\n                  {currentevent.friends_invited.map((data) => {\n                    return (\n                      <Chip icon={<TagFaces />} label={data.key} style={{ margin: '5px', marginBottom: \"15px\"}}/>\n                    );\n                  })}\n                </Container> }\n            </Card>\n          </Container> ))}\n        <NavLink to=\"/create\">\n          <Fab color=\"secondary\" variant=\"extended\" style={{position: 'relative', margin: 15}}> \n            <Add />\n            Create Event\n          </Fab>\n        </NavLink>\n        {/* <ChipsArray /> */}\n      </div>\n    );\n  // }\n}"]},"metadata":{},"sourceType":"module"}