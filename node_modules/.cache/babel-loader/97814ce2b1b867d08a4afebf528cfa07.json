{"ast":null,"code":"var _jsxFileName = \"/Users/chrisgallo/Documents/GitHub/Split/src/components/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport FriendsChip from \"./Chip\";\nimport ChipsArray from \"./chips\";\nimport { Add, EventNote, Notes, Event, AddLocation, PersonAdd, Image, Email } from '@material-ui/icons';\nimport { TextField, Radio, RadioGroup, FormControl, FormControlLabel, FormLabel, Button, Container, Chip, IconButton, Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Create(props) {\n  _s();\n\n  const [eventName, setEventName] = useState('');\n  const [eventLocation, setEventLocation] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [friendsInvited, setFriendsInvited] = useState([{\n    key: \"email1@gmail.com\",\n    label: \"email1@gmail.com\"\n  }, {\n    key: \"email2@gmail.com\",\n    label: \"email2@gmail.com\"\n  }]);\n  const [friendSet, setFriendSet] = useState(new Set([\"email1@gmail.com\", \"email2@gmail.com\"]));\n  const [imageAddress, setImageAddress] = useState('');\n  const [currentFriend, setCurrentFriend] = useState('');\n\n  const updateChips = e => {\n    console.log(currentFriend);\n\n    if (!friendSet.has(currentFriend)) {\n      setFriendsInvited([...friendsInvited, {\n        key: currentFriend,\n        label: currentFriend\n      }]);\n      setFriendSet(prev => new Set([...prev, currentFriend]));\n      setCurrentFriend('');\n    } else {\n      window.alert(\"This friend has already been added\");\n    }\n  }; // This function will handle the submission.\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // When post request is sent to the create url, axios will add a new record(newperson) to the database.\n\n    const newEvent = {\n      event_name: eventName,\n      event_location: eventLocation,\n      event_description: eventDescription,\n      event_date: eventDate,\n      friends_invited: friendsInvited\n    };\n    axios.post(\"http://localhost:5000/event/add\", newEvent).then(res => console.log(res.data)); // We will empty the state after posting the data to the database\n\n    setEventName(\"\");\n    setEventLocation(\"\");\n    setEventDescription(\"\");\n    setEventDate(\"\");\n    setFriendsInvited([]);\n    setFriendSet(new Set([]));\n    window.location.href = \"/\";\n  }; // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(EventNote, {\n          style: {\n            margin: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            color: \"white\",\n            marginBottom: 15,\n            width: \"100%\"\n          },\n          label: \"Name of Event:\",\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"text\",\n          className: \"form-control\",\n          value: eventName,\n          onChange: e => setEventName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(AddLocation, {\n          style: {\n            margin: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            color: \"white\",\n            marginBottom: 15,\n            width: \"100%\"\n          },\n          label: \"Event Location:\",\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"text\",\n          className: \"form-control\",\n          value: eventLocation,\n          onChange: e => setEventLocation(e.target.value) // required\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Notes, {\n          style: {\n            margin: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            color: \"white\",\n            marginBottom: 15,\n            width: \"100%\"\n          },\n          label: \"Event Description:\",\n          multiline: true,\n          rows: 4,\n          variant: \"outlined\",\n          size: \"small\",\n          type: \"text\",\n          className: \"form-control\",\n          value: eventDescription,\n          onChange: e => setEventDescription(e.target.value) // required\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Event, {\n          style: {\n            margin: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"eventdate\",\n          label: \"Event Date\",\n          type: \"date\",\n          variant: \"outlined\",\n          sx: {\n            width: 220\n          },\n          InputLabelProps: {\n            shrink: true\n          },\n          style: {\n            color: \"white\",\n            marginBottom: 15,\n            width: \"100%\"\n          },\n          onChange: e => setEventDate(e.target.value),\n          value: eventDate // required\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(PersonAdd, {\n          style: {\n            margin: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          style: {\n            width: \"100%\"\n          },\n          direction: \"column\",\n          justifyContent: \"flex-start\",\n          alignItems: \"stretch\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"invitefriends\",\n              style: {\n                color: \"white\",\n                width: \"100%\"\n              },\n              label: \"Invite Friends (email):\",\n              variant: \"outlined\",\n              size: \"small\",\n              type: \"text\",\n              className: \"form-control\",\n              value: currentFriend,\n              onChange: e => setCurrentFriend(e.target.value),\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: e => updateChips(e),\n                  children: /*#__PURE__*/_jsxDEV(PersonAdd, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 88\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 46\n                }, this)\n              } // required\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              marginBottom: \"15px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ChipsArray, {\n              friends: friendsInvited,\n              setFriendsInvited: setFriendsInvited,\n              friendSet: friendSet,\n              setFreindsSet: setFriendSet\n            }, friendsInvited, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          style: {\n            margin: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          component: \"label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            value: imageAddress,\n            onChange: e => setImageAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), \"Add an Image\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: '15px'\n          },\n          variant: \"contained\",\n          type: \"submit\",\n          value: \"Create person\",\n          className: \"btn btn-primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 26\n          }, this),\n          children: \"Create Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Create, \"2GOS/rI/aLsCSAYvGZVGZj2K01s=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/chrisgallo/Documents/GitHub/Split/src/components/create.js"],"names":["React","useState","axios","FriendsChip","ChipsArray","Add","EventNote","Notes","Event","AddLocation","PersonAdd","Image","Email","TextField","Radio","RadioGroup","FormControl","FormControlLabel","FormLabel","Button","Container","Chip","IconButton","Grid","Create","props","eventName","setEventName","eventLocation","setEventLocation","eventDescription","setEventDescription","eventDate","setEventDate","friendsInvited","setFriendsInvited","key","label","friendSet","setFriendSet","Set","imageAddress","setImageAddress","currentFriend","setCurrentFriend","updateChips","e","console","log","has","prev","window","alert","handleSubmit","preventDefault","newEvent","event_name","event_location","event_description","event_date","friends_invited","post","then","res","data","location","href","marginTop","display","margin","color","marginBottom","width","target","value","shrink","endAdornment"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport FriendsChip from \"./Chip\";\nimport ChipsArray from \"./chips\";\nimport { Add, EventNote, Notes, Event, AddLocation , PersonAdd, Image, Email } from '@material-ui/icons';\nimport { TextField, Radio, RadioGroup, FormControl, FormControlLabel, FormLabel, Button, Container, Chip, IconButton, Grid } from \"@material-ui/core\";\n\nfunction Create(props) {\n  const [eventName, setEventName] = useState('');\n  const [eventLocation, setEventLocation] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [friendsInvited, setFriendsInvited] = useState([\n    {key: \"email1@gmail.com\", label: \"email1@gmail.com\"},\n    {key: \"email2@gmail.com\", label: \"email2@gmail.com\"}\n  ]);\n  const [friendSet, setFriendSet] = useState(new Set([\"email1@gmail.com\", \"email2@gmail.com\"]))\n  const [imageAddress, setImageAddress] = useState('');\n  const [currentFriend, setCurrentFriend] = useState('');\n\n  const updateChips = (e) => {\n    console.log(currentFriend)\n    if (!friendSet.has(currentFriend)){\n      setFriendsInvited([...friendsInvited, {key: currentFriend, label: currentFriend}]);\n      setFriendSet(prev => new Set([...prev, currentFriend]));\n      setCurrentFriend('');\n    } else {\n      window.alert(\"This friend has already been added\")\n    }\n  }\n\n\t// This function will handle the submission.\n\tconst handleSubmit = (e) => {\n    e.preventDefault();\n    // When post request is sent to the create url, axios will add a new record(newperson) to the database.\n    const newEvent = {\n      event_name: eventName, \n      event_location: eventLocation, \n      event_description: eventDescription,\n      event_date: eventDate,\n      friends_invited: friendsInvited,\n    }\n\n    axios\n      .post(\"http://localhost:5000/event/add\", newEvent)\n      .then((res) => console.log(res.data));\n \n    // We will empty the state after posting the data to the database\n\t\tsetEventName(\"\");\n\t\tsetEventLocation(\"\");\n\t\tsetEventDescription(\"\");\n\t\tsetEventDate(\"\");\n\t\tsetFriendsInvited([]);\n    setFriendSet(new Set([]))\n\n    window.location.href = \"/\"\n  }\n \n  // This following section will display the form that takes the input from the user.\n    return (\n      <Container maxWidth='sm' style={{ marginTop: 20 }}>\n        <h3>Create New Event</h3>\n        <form onSubmit={handleSubmit} >\n          <div className=\"form-group\" style={{display: \"flex\"}}>\n            <EventNote style={{margin: \"8px\"}}/>\n            <TextField\n              style={{color: \"white\", marginBottom: 15, width: \"100%\" }}\n              label=\"Name of Event:\"\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              className=\"form-control\"\n              value={eventName}\n              onChange={e => setEventName(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\" style={{display: \"flex\"}}>\n            <AddLocation style={{margin: \"8px\"}}/>\n            <TextField\n              style={{color: \"white\", marginBottom: 15, width: \"100%\" }}\n              label=\"Event Location:\"\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              className=\"form-control\"\n              value={eventLocation}\n              onChange={e => setEventLocation(e.target.value)}\n              // required\n            />\n          </div>\n          <div className=\"form-group\" style={{display: \"flex\"}}>\n            <Notes style={{margin: \"8px\"}}/>\n            <TextField\n              style={{color: \"white\", marginBottom: 15, width: \"100%\"}}\n              label=\"Event Description:\"\n              multiline\n              rows={4}\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              className=\"form-control\"\n              value={eventDescription}\n              onChange={e => setEventDescription(e.target.value)}\n              // required\n            />\n          </div>\n          <div style={{display: \"flex\"}}>\n            <Event style={{margin: \"8px\"}}/>\n            <TextField\n              id=\"eventdate\"\n              label=\"Event Date\"\n              type=\"date\"\n              variant=\"outlined\"\n              sx={{ width: 220 }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              style={{ color: \"white\", marginBottom: 15, width: \"100%\" }}\n              onChange={e => setEventDate(e.target.value)}\n              value={eventDate}\n              // required\n            />\n          </div>\n          <div style={{display: \"flex\"}}>\n            <PersonAdd style={{margin: \"8px\"}}/>\n            <Grid \n              container\n              style={{width: \"100%\"}}\n              direction=\"column\"\n              justifyContent=\"flex-start\"\n              alignItems=\"stretch\"\n            >\n              <Grid item>\n                <TextField\n                  id=\"invitefriends\"\n                  style={{ color: \"white\", width: \"100%\" }}\n                  label=\"Invite Friends (email):\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={currentFriend}\n                  onChange={e => setCurrentFriend(e.target.value)}\n                  InputProps={{endAdornment: <IconButton onClick={e => updateChips(e)}><PersonAdd /></IconButton>}}\n                  // required\n                />\n              </Grid>\n              <Grid item style={{marginBottom: \"15px\"}}>\n                <ChipsArray key={friendsInvited} friends={friendsInvited} setFriendsInvited={setFriendsInvited} friendSet={friendSet} setFreindsSet={setFriendSet}/>\n              </Grid>\n            </Grid>\n          </div>\n          <div style={{display: \"flex\"}}>\n            <Image style={{margin: \"8px\"}}/>\n            {/* <TextField\n              id=\"eventpicture\"\n              style={{ color: \"white\", marginBottom: 15, width: \"100%\" }}\n              label=\"Add Picture:\"\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              className=\"form-control\"\n              // required\n            /> */}\n            <Button\n              variant=\"outlined\"\n              component=\"label\"\n            >\n              {/* <Image style={{ marginRight: \"10px\" }}/> */}\n              <input\n                type=\"file\"\n                hidden\n                value={imageAddress}\n                onChange={e => setImageAddress(e.target.value)}\n              />\n              Add an Image\n            </Button>\n          </div>\n          <div className=\"form-group\">\n            <Button \n              style={{marginTop: '15px'}}\n              variant=\"contained\" \n              type=\"submit\"\n              value=\"Create person\"\n              className=\"btn btn-primary\"\n              startIcon={<Add />}>\n              Create Event\n            </Button>\n          </div>\n        </form>\n      </Container>\n    );\n}\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}