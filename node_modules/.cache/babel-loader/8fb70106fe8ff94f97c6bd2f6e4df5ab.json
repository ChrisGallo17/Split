{"ast":null,"code":"var _jsxFileName = \"/Users/chrisgallo/Documents/GitHub/Split/src/components/chips.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip'; // import Paper from '@material-ui/core/Paper';\n\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport { Container } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  }\n}));\nexport default function ChipsArray(_ref) {\n  _s();\n\n  let {\n    friends,\n    setFriendsInvited,\n    friendSet,\n    setFreindsSet\n  } = _ref;\n  const classes = useStyles();\n  const [chipData, setChipData] = React.useState(friends);\n\n  const handleDelete = chipToDelete => () => {\n    setChipData(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n    setFriendsInvited(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n    setFreindsSet(prev => new Set([...prev].filter(x => x !== chipToDelete.key)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"ul\",\n    className: classes.root,\n    children: chipData.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          icon: /*#__PURE__*/_jsxDEV(TagFacesIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this),\n          label: data.label,\n          onDelete: handleDelete(data),\n          className: classes.chip\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, data.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChipsArray, \"AojWQ2eN612ntxJCl9HpL8T3Ve8=\", false, function () {\n  return [useStyles];\n});\n\n_c = ChipsArray;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChipsArray\");","map":{"version":3,"sources":["/Users/chrisgallo/Documents/GitHub/Split/src/components/chips.js"],"names":["React","makeStyles","Chip","TagFacesIcon","Container","useStyles","theme","root","display","justifyContent","flexWrap","listStyle","padding","spacing","margin","chip","ChipsArray","friends","setFriendsInvited","friendSet","setFreindsSet","classes","chipData","setChipData","useState","handleDelete","chipToDelete","chips","filter","key","prev","Set","x","map","data","label"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,QAAQ,EAAE,MAHN;AAIJC,IAAAA,SAAS,EAAE,MAJP;AAKJC,IAAAA,OAAO,EAAEN,KAAK,CAACO,OAAN,CAAc,GAAd,CALL;AAMJC,IAAAA,MAAM,EAAE;AANJ,GADiC;AASvCC,EAAAA,IAAI,EAAE;AACJD,IAAAA,MAAM,EAAER,KAAK,CAACO,OAAN,CAAc,GAAd;AADJ;AATiC,CAAZ,CAAD,CAA5B;AAcA,eAAe,SAASG,UAAT,OAA8E;AAAA;;AAAA,MAA1D;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,iBAAX;AAA8BC,IAAAA,SAA9B;AAAyCC,IAAAA;AAAzC,GAA0D;AAC3F,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BvB,KAAK,CAACwB,QAAN,CAAeP,OAAf,CAAhC;;AAEA,QAAMQ,YAAY,GAAIC,YAAD,IAAkB,MAAM;AAC3CH,IAAAA,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAcb,IAAD,IAAUA,IAAI,CAACc,GAAL,KAAaH,YAAY,CAACG,GAAjD,CAAZ,CAAX;AACAX,IAAAA,iBAAiB,CAAES,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAcb,IAAD,IAAUA,IAAI,CAACc,GAAL,KAAaH,YAAY,CAACG,GAAjD,CAAZ,CAAjB;AACAT,IAAAA,aAAa,CAACU,IAAI,IAAI,IAAIC,GAAJ,CAAQ,CAAC,GAAGD,IAAJ,EAAUF,MAAV,CAAiBI,CAAC,IAAIA,CAAC,KAAKN,YAAY,CAACG,GAAzC,CAAR,CAAT,CAAb;AACD,GAJD;;AAMA,sBACE,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,IAArB;AAA0B,IAAA,SAAS,EAAER,OAAO,CAACd,IAA7C;AAAA,cACGe,QAAQ,CAACW,GAAT,CAAcC,IAAD,IAAU;AAEtB,0BACE;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,IAAI,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBADR;AAEE,UAAA,KAAK,EAAEA,IAAI,CAACC,KAFd;AAGE,UAAA,QAAQ,EAAEV,YAAY,CAACS,IAAD,CAHxB;AAIE,UAAA,SAAS,EAAEb,OAAO,CAACN;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF,SAASmB,IAAI,CAACL,GAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAZA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA3BuBb,U;UACNX,S;;;KADMW,U","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\n// import Paper from '@material-ui/core/Paper';\nimport TagFacesIcon from '@material-ui/icons/TagFaces';\nimport { Container } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nexport default function ChipsArray({ friends, setFriendsInvited, friendSet, setFreindsSet }) {\n  const classes = useStyles();\n  const [chipData, setChipData] = React.useState(friends);\n\n  const handleDelete = (chipToDelete) => () => {\n    setChipData((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n    setFriendsInvited((chips) => chips.filter((chip) => chip.key !== chipToDelete.key));\n    setFreindsSet(prev => new Set([...prev].filter(x => x !== chipToDelete.key)))\n  };\n\n  return (\n    <Container component=\"ul\" className={classes.root}>\n      {chipData.map((data) => {\n\n        return (\n          <li key={data.key}>\n            <Chip\n              icon={<TagFacesIcon />}\n              label={data.label}\n              onDelete={handleDelete(data)}\n              className={classes.chip}\n            />\n          </li>\n        );\n      })}\n    </Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}