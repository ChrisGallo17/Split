{"ast":null,"code":"var _jsxFileName = \"/Users/chrisgallo/Documents/newmac/src/components/edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // This will require to npm install axios\n\nimport axios from 'axios';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit(props) {\n  _s();\n\n  const [personName, setPersonName] = useState('');\n  const [personPosition, setPersonPosition] = useState('');\n  const [personLevel, setPersonLevel] = useState('');\n  const [records, setRecords] = useState([]);\n  const {\n    id\n  } = useParams(); // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/record/\" + id).then(response => {\n      setPersonName(response.data.person_name);\n      setPersonPosition(response.data.person_position);\n      setPersonLevel(response.data.person_level);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, [id]); // This function will handle the submission.\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newEditedperson = {\n      person_name: personName,\n      person_position: personPosition,\n      person_level: personLevel\n    };\n    console.log(newEditedperson); // This will send a post request to update the data in the database.\n\n    axios.post(\"http://localhost:5000/update/\" + id, newEditedperson).then(res => console.log(res.data)); // props.history.push(\"/\");\n  }; // This following section will display the update-form that takes the input from the user to update the data.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      align: \"center\",\n      children: \"Update Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Person's Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\" // value={this.state.person_name}\n          ,\n          value: personName,\n          onChange: e => setPersonName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Position: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\" // value={this.state.person_position}\n          ,\n          value: personPosition,\n          onChange: e => setPersonPosition(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"priorityOptions\",\n            id: \"priorityLow\",\n            value: \"Intern\",\n            checked: personLevel === \"Intern\",\n            onChange: e => setPersonLevel(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Intern\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"priorityOptions\",\n            id: \"priorityMedium\",\n            value: \"Junior\",\n            checked: personLevel === \"Junior\",\n            onChange: e => setPersonLevel(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Junior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"priorityOptions\",\n            id: \"priorityHigh\",\n            value: \"Senior\",\n            checked: personLevel === \"Senior\",\n            onChange: e => setPersonLevel(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Senior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Record\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n} // You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records.\n\n_s(Edit, \"gLUeUbMh9UpSKL3w6UCtN/ceB3g=\", false, function () {\n  return [useParams];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["/Users/chrisgallo/Documents/newmac/src/components/edit.js"],"names":["React","useState","useEffect","axios","useParams","Edit","props","personName","setPersonName","personPosition","setPersonPosition","personLevel","setPersonLevel","records","setRecords","id","get","then","response","data","person_name","person_position","person_level","catch","error","console","log","handleSubmit","e","preventDefault","newEditedperson","post","res","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport { useParams } from \"react-router-dom\";\n\nexport default function Edit(props) {\n  const [personName, setPersonName] = useState('');\n  const [personPosition, setPersonPosition] = useState('');\n  const [personLevel, setPersonLevel] = useState('');\n  const [records, setRecords] = useState([]);\n  const { id } = useParams()\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:5000/record/\" + id)\n      .then((response) => {\n        setPersonName(response.data.person_name);\n        setPersonPosition(response.data.person_position);\n        setPersonLevel(response.data.person_level);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [id]);\n \n  // This function will handle the submission.\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newEditedperson = {\n      person_name: personName,\n      person_position: personPosition,\n      person_level: personLevel,\n    };\n    console.log(newEditedperson);\n \n    // This will send a post request to update the data in the database.\n    axios\n      .post(\n        \"http://localhost:5000/update/\" + id,\n        newEditedperson\n      )\n      .then((res) => console.log(res.data));\n \n    // props.history.push(\"/\");\n  }\n \n  // This following section will display the update-form that takes the input from the user to update the data.\n  return (\n    <div>\n      <h3 align=\"center\">Update Record</h3>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Person's Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            // value={this.state.person_name}\n            value={personName}\n            onChange={e => setPersonName(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Position: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            // value={this.state.person_position}\n            value={personPosition}\n            onChange={e => setPersonPosition(e.target.value)}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"priorityOptions\"\n              id=\"priorityLow\"\n              value=\"Intern\"\n              checked={personLevel === \"Intern\"}\n              onChange={e => setPersonLevel(e.target.value)}\n            />\n            <label className=\"form-check-label\">Intern</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"priorityOptions\"\n              id=\"priorityMedium\"\n              value=\"Junior\"\n              checked={personLevel === \"Junior\"}\n              onChange={e => setPersonLevel(e.target.value)}\n            />\n            <label className=\"form-check-label\">Junior</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"priorityOptions\"\n              id=\"priorityHigh\"\n              value=\"Senior\"\n              checked={personLevel === \"Senior\"}\n              onChange={e => setPersonLevel(e.target.value)}\n            />\n            <label className=\"form-check-label\">Senior</label>\n          </div>\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n\n \n// You can get access to the history object's properties and the closest <Route>'s match via the withRouter\n// higher-order component. This makes it easier for us to edit our records."]},"metadata":{},"sourceType":"module"}