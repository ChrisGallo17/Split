[{"/Users/chrisgallo/Documents/newmac/src/index.js":"1","/Users/chrisgallo/Documents/newmac/src/App.js":"2","/Users/chrisgallo/Documents/newmac/src/components/AppBar.js":"3","/Users/chrisgallo/Documents/newmac/src/components/recordList.js":"4","/Users/chrisgallo/Documents/newmac/src/components/navbar.js":"5","/Users/chrisgallo/Documents/newmac/src/components/create.js":"6","/Users/chrisgallo/Documents/newmac/src/components/edit.js":"7","/Users/chrisgallo/Documents/GitHub/Split/src/index.js":"8","/Users/chrisgallo/Documents/GitHub/Split/src/App.js":"9","/Users/chrisgallo/Documents/GitHub/Split/src/components/AppBar.js":"10","/Users/chrisgallo/Documents/GitHub/Split/src/components/edit.js":"11","/Users/chrisgallo/Documents/GitHub/Split/src/components/create.js":"12","/Users/chrisgallo/Documents/GitHub/Split/src/components/recordList.js":"13","/Users/chrisgallo/Documents/GitHub/Split/src/components/eventList.js":"14","/Users/chrisgallo/Documents/GitHub/Split/src/components/chips.js":"15","/Users/chrisgallo/Documents/GitHub/Split/src/components/Chip.js":"16","/Users/chrisgallo/Documents/GitHub/Split/src/components/eventMenu.js":"17"},{"size":593,"mtime":1640382930381,"results":"18","hashOfConfig":"19"},{"size":862,"mtime":1640557688956,"results":"20","hashOfConfig":"19"},{"size":6934,"mtime":1640554306731,"results":"21","hashOfConfig":"19"},{"size":3728,"mtime":1640557717454,"results":"22","hashOfConfig":"19"},{"size":1209,"mtime":1640312883478,"results":"23","hashOfConfig":"19"},{"size":3526,"mtime":1640557622237,"results":"24","hashOfConfig":"19"},{"size":4033,"mtime":1640467889897,"results":"25","hashOfConfig":"19"},{"size":593,"mtime":1640382930381,"results":"26","hashOfConfig":"27"},{"size":1261,"mtime":1641181760204,"results":"28","hashOfConfig":"27"},{"size":7741,"mtime":1641152762833,"results":"29","hashOfConfig":"27"},{"size":4033,"mtime":1640467889897,"results":"30","hashOfConfig":"27"},{"size":6780,"mtime":1640931238242,"results":"31","hashOfConfig":"27"},{"size":3712,"mtime":1640648297289,"results":"32","hashOfConfig":"27"},{"size":5452,"mtime":1641170392215,"results":"33","hashOfConfig":"27"},{"size":1425,"mtime":1640931655843,"results":"34","hashOfConfig":"27"},{"size":319,"mtime":1640923164670,"results":"35","hashOfConfig":"27"},{"size":1195,"mtime":1641068329076,"results":"36","hashOfConfig":"27"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rst3g2",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dy1vu6",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"/Users/chrisgallo/Documents/newmac/src/index.js",[],"/Users/chrisgallo/Documents/newmac/src/App.js",["75","76","77","78","79"],"/Users/chrisgallo/Documents/newmac/src/components/AppBar.js",[],"/Users/chrisgallo/Documents/newmac/src/components/recordList.js",[],"/Users/chrisgallo/Documents/newmac/src/components/navbar.js",[],"/Users/chrisgallo/Documents/newmac/src/components/create.js",[],"/Users/chrisgallo/Documents/newmac/src/components/edit.js",[],"/Users/chrisgallo/Documents/GitHub/Split/src/index.js",[],"/Users/chrisgallo/Documents/GitHub/Split/src/App.js",["80","81","82","83","84","85","86","87"],"/Users/chrisgallo/Documents/GitHub/Split/src/components/AppBar.js",["88","89","90"],"import React from 'react';\nimport \"./AppBar.css\"\nimport { alpha, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { NavLink } from \"react-router-dom\";\nimport { Person, Settings } from '@material-ui/icons';\nimport { Divider, ListItemIcon, ListItemText } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  flex: {\n    display: 'flex'\n  }\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose} style={{\n            display: 'flex',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n        }}>\n        <ListItemIcon style={{ minWidth: \"5px\", marginRight: \"15px\" }}>\n          <Person fontSize=\"small\" />\n        </ListItemIcon>\n        <ListItemText>Profile</ListItemText>\n      </MenuItem>\n      <MenuItem onClick={handleMenuClose} style={{\n            display: 'flex',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n        }}>\n        <ListItemIcon style={{ minWidth: \"5px\", marginRight: \"15px\" }}>\n          <Settings fontSize=\"small\" />\n        </ListItemIcon>\n        <ListItemText>Settings</ListItemText>\n      </MenuItem>\n      <Divider />\n      <MenuItem onClick={handleMenuClose}>Log Out</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar >\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            <NavLink to=\"/\">\n              Split\n            </NavLink>\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","/Users/chrisgallo/Documents/GitHub/Split/src/components/edit.js",[],"/Users/chrisgallo/Documents/GitHub/Split/src/components/create.js",["91","92","93","94","95","96","97","98"],"import React, { useState } from \"react\";\n// This will require to npm install axios\nimport axios from 'axios';\nimport FriendsChip from \"./Chip\";\nimport ChipsArray from \"./chips\";\nimport { Add, EventNote, Notes, Event, AddLocation , PersonAdd, Image, Email } from '@material-ui/icons';\nimport { TextField, Radio, RadioGroup, FormControl, FormControlLabel, FormLabel, Button, Container, Chip, IconButton, Grid } from \"@material-ui/core\";\n\nfunction Create(props) {\n  const [eventName, setEventName] = useState('');\n  const [eventLocation, setEventLocation] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [friendsInvited, setFriendsInvited] = useState([\n    {key: \"email1@gmail.com\", label: \"email1@gmail.com\"},\n    {key: \"email2@gmail.com\", label: \"email2@gmail.com\"}\n  ]);\n  const [friendSet, setFriendSet] = useState(new Set([\"email1@gmail.com\", \"email2@gmail.com\"]))\n  const [imageAddress, setImageAddress] = useState('');\n  const [currentFriend, setCurrentFriend] = useState('');\n\n  const updateChips = (e) => {\n    console.log(currentFriend)\n    if (!friendSet.has(currentFriend)){\n      setFriendsInvited([...friendsInvited, {key: currentFriend, label: currentFriend}]);\n      setFriendSet(prev => new Set([...prev, currentFriend]));\n      setCurrentFriend('');\n    } else {\n      window.alert(\"This friend has already been added\")\n    }\n  }\n\n\t// This function will handle the submission.\n\tconst handleSubmit = (e) => {\n    e.preventDefault();\n    // When post request is sent to the create url, axios will add a new record(newperson) to the database.\n    const newEvent = {\n      event_name: eventName, \n      event_location: eventLocation, \n      event_description: eventDescription,\n      event_date: eventDate,\n      friends_invited: friendsInvited,\n    }\n\n    axios\n      .post(\"http://localhost:5000/event/add\", newEvent)\n      .then((res) => console.log(res.data));\n \n    // We will empty the state after posting the data to the database\n\t\tsetEventName(\"\");\n\t\tsetEventLocation(\"\");\n\t\tsetEventDescription(\"\");\n\t\tsetEventDate(\"\");\n\t\tsetFriendsInvited([]);\n    setFriendSet(new Set([]))\n\n    window.location.href = \"/\"\n  }\n \n  // This following section will display the form that takes the input from the user.\n    return (\n      <Container maxWidth='sm' style={{ marginTop: 20 }}>\n        <h3>Create New Event</h3>\n        <form onSubmit={handleSubmit} >\n          <div className=\"form-group\" style={{display: \"flex\"}}>\n            <EventNote style={{margin: \"8px\"}}/>\n            <TextField\n              style={{color: \"white\", marginBottom: 15, width: \"100%\" }}\n              label=\"Name of Event:\"\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              className=\"form-control\"\n              value={eventName}\n              onChange={e => setEventName(e.target.value)}\n              required\n            />\n          </div>\n          <div className=\"form-group\" style={{display: \"flex\"}}>\n            <AddLocation style={{margin: \"8px\"}}/>\n            <TextField\n              style={{color: \"white\", marginBottom: 15, width: \"100%\" }}\n              label=\"Event Location:\"\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              className=\"form-control\"\n              value={eventLocation}\n              onChange={e => setEventLocation(e.target.value)}\n              // required\n            />\n          </div>\n          <div className=\"form-group\" style={{display: \"flex\"}}>\n            <Notes style={{margin: \"8px\"}}/>\n            <TextField\n              style={{color: \"white\", marginBottom: 15, width: \"100%\"}}\n              label=\"Event Description:\"\n              multiline\n              rows={4}\n              variant=\"outlined\"\n              size=\"small\"\n              type=\"text\"\n              className=\"form-control\"\n              value={eventDescription}\n              onChange={e => setEventDescription(e.target.value)}\n              // required\n            />\n          </div>\n          <div style={{display: \"flex\"}}>\n            <Event style={{margin: \"8px\"}}/>\n            <TextField\n              id=\"eventdate\"\n              label=\"Event Date\"\n              type=\"date\"\n              variant=\"outlined\"\n              sx={{ width: 220 }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              style={{ color: \"white\", marginBottom: 15, width: \"100%\" }}\n              onChange={e => setEventDate(e.target.value)}\n              value={eventDate}\n              // required\n            />\n          </div>\n          <div style={{display: \"flex\"}}>\n            <PersonAdd style={{margin: \"8px\"}}/>\n            <Grid \n              container\n              style={{width: \"100%\"}}\n              direction=\"column\"\n              justifyContent=\"flex-start\"\n              alignItems=\"stretch\"\n            >\n              <Grid item>\n                <TextField\n                  id=\"invitefriends\"\n                  style={{ color: \"white\", width: \"100%\" }}\n                  label=\"Invite Friends (email):\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={currentFriend}\n                  onChange={e => setCurrentFriend(e.target.value)}\n                  InputProps={{endAdornment: <IconButton onClick={e => updateChips(e)}><PersonAdd /></IconButton>}}\n                  // required\n                />\n              </Grid>\n              <Grid item style={{marginBottom: \"15px\"}}>\n                <ChipsArray key={friendsInvited} friends={friendsInvited} setFriendsInvited={setFriendsInvited} friendSet={friendSet} setFreindsSet={setFriendSet}/>\n              </Grid>\n            </Grid>\n          </div>\n          <div style={{display: \"flex\"}}>\n            <Image style={{margin: \"8px\"}}/>\n            <Button\n              variant=\"outlined\"\n              component=\"label\"\n            >\n              {/* <Image style={{ marginRight: \"10px\" }}/> */}\n              <input\n                type=\"file\"\n                hidden\n                value={imageAddress}\n                onChange={e => setImageAddress(e.target.value)}\n              />\n              Add an Image\n            </Button>\n          </div>\n          <div className=\"form-group\">\n            <Button \n              style={{marginTop: '15px'}}\n              variant=\"contained\" \n              type=\"submit\"\n              value=\"Create person\"\n              className=\"btn btn-primary\"\n              startIcon={<Add />}>\n              Create Event\n            </Button>\n          </div>\n        </form>\n      </Container>\n    );\n}\n\nexport default Create;","/Users/chrisgallo/Documents/GitHub/Split/src/components/recordList.js",[],"/Users/chrisgallo/Documents/GitHub/Split/src/components/eventList.js",["99","100","101","102","103","104","105","106"],"import React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Add, AddLocation, Comment, PanTool, PanToolOutlined, PersonAdd, Place, TagFaces } from '@material-ui/icons';\nimport { NavLink } from \"react-router-dom\";\nimport { Chip, Fab, Grid, Typography, Switch } from \"@material-ui/core\";\nimport { Card, CardHeader, CardContent, CardMedia, CardActions, Avatar, IconButton, Container } from \"@material-ui/core\";\nimport { Delete, MoreVert, Favorite, Share } from \"@material-ui/icons\";\nimport ChipsArray from \"./chips\";\nimport EventMenu from \"./eventMenu\";\n\nexport default function EventList() {\n  // This is the constructor that shall store our data retrieved from the database\n  const url = \"http://localhost:5000/event/\"\n  const [events, setEvents] = useState([])\n  const [willAttend, setWillAttend] = useState(false)\n  const [active, setActive] = useState(false)\n  // const [noEvents, setNoEvents] = useState(false)\n\n\n  const onClickWillAttend = () => setWillAttend((prevWillAttend) => ! prevWillAttend)\n  // This method will get the data from the database.\n  useEffect(() => {\n    axios\n      .get(url)\n      .then((response) => {\n        setEvents(response.data);\n        // console.log(response.data);\n        // if (response.data.length > 0) {\n        //   setNoEvents(false)\n        // } else {\n        //   setNoEvents(true)\n        // }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  // This method will delete an event based on the method\n  const deleteEvent = (id) => {\n    if (window.confirm(\"Do you want to delete this event?\")){\n      console.log(\"id: \", id)\n      axios.delete(\"http://localhost:5000/\" + id).then((response) => {\n        console.log(response.data);\n      });\n      setEvents(events.filter((el) => el._id !== id));\n    }\n  }\n\n  // console.log(noEvents)\n  // This following section will display the table with the records of individuals.\n  // if (noEvents) {\n  //   return (\n  //     <div>\n  //       <Typography variant=\"h5\" style={{ marginTop: '25px' }}>\n  //         Looks like there's no events, plan one\n  //       </Typography>\n  //       <NavLink to=\"/create\">\n  //         <Fab color=\"secondary\" variant=\"extended\" style={{position: 'relative', margin: 15}}> \n  //           <Add />\n  //           Create Event\n  //         </Fab>\n  //       </NavLink>\n  //     </div>\n\n  //   )\n  // } else {\n    return (\n      <div>\n        {events.map((currentevent) => (\n          <Container maxWidth=\"sm\" style={{ marginTop: '15px', textAlign: \"left\" }} key={currentevent._id}>\n            <Card sx={{ maxWidth: 345 }}>\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"recipe\">\n                    CG\n                  </Avatar>\n                }\n                action={\n                  // <IconButton aria-label=\"settings\">\n                    <EventMenu currentevent={currentevent} deleteEvent={deleteEvent} />\n                  // </IconButton>\n                }\n                title={currentevent.event_name}\n                subheader={currentevent.event_date}\n              />\n              <CardMedia\n                component=\"img\"\n                height=\"194\"\n                src={\"https://s3-media0.fl.yelpcdn.com/bphoto/4xekxff-5mjxc_9VaHA2hQ/o.jpg\"}\n                alt=\"Bowling\"\n              />\n              <CardContent style={{paddingBottom: \"16px\" }}>\n                <Grid container spacing={2} style={{ display: \"flex\" }}>\n                  <Grid item style={{ alignItems: \"flex-start\", flexGrow: 1 }}>\n                    <div style={{\n                        display: 'flex',\n                        alignItems: 'center',\n                        flexWrap: 'wrap',\n                    }}>\n                      <Place fontSize=\"small\" style={{ marginRight: \"5px\" }}/>\n                      <Typography variant=\"body2\" style={{ top: 0 }}>\n                        {currentevent.event_location}\n                      </Typography>\n                    </div>\n                    <Typography variant=\"body2\">\n                      {currentevent.event_description}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs=\"auto\">\n                    <IconButton aria-label=\"attend\" onClick={onClickWillAttend}>\n                      { willAttend ? <PanToolOutlined /> : <PanTool style={{ color: \"#32d532\" }}/> }\n                    </IconButton>\n                    <IconButton aria-label=\"chat\">\n                      <Comment />\n                    </IconButton>\n                    {/* <CardActions disableSpacing> */}\n                    {/* </CardActions> */}\n                  </Grid>\n                </Grid>\n              {currentevent.friends_invited &&\n                <>\n                  {currentevent.friends_invited.map((data) => {\n                    return (\n                      <Chip icon={<TagFaces />} label={data.key} style={{ margin: '5px'}}/>\n                    );\n                  })}\n                </> }\n              </CardContent>\n            </Card>\n          </Container> ))}\n        <NavLink to=\"/create\">\n          <Fab color=\"secondary\" variant=\"extended\" style={{position: 'relative', margin: 15}}> \n            <Add />\n            Create Event\n          </Fab>\n        </NavLink>\n        <Switch value=\"active\" onChange={() => setActive(!active)} checked={ active }/>\n        {/* <ChipsArray /> */}\n      </div>\n    );\n  // }\n}","/Users/chrisgallo/Documents/GitHub/Split/src/components/chips.js",[],"/Users/chrisgallo/Documents/GitHub/Split/src/components/Chip.js",[],"/Users/chrisgallo/Documents/GitHub/Split/src/components/eventMenu.js",["107"],"import React, { useState } from \"react\";\nimport { IconButton, Menu, MenuItem } from \"@material-ui/core\";\nimport { Delete, MoreVert, PersonAdd, Share } from \"@material-ui/icons\";\n\nexport default function EventMenu({currentevent, deleteEvent}) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        id=\"basic-button\"\n        aria-controls={open ? 'basic-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleClick}\n      >\n        <MoreVert />\n      </IconButton>\n      <Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        <MenuItem onClick={handleClose}><Share /></MenuItem>\n        <MenuItem onClick={handleClose}><PersonAdd /></MenuItem>\n        <MenuItem onClick={() => deleteEvent(currentevent._id)}><Delete /></MenuItem>\n      </Menu>\n    </div>\n  )\n}",{"ruleId":"108","severity":1,"message":"109","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":20},{"ruleId":"108","severity":1,"message":"112","line":3,"column":22,"nodeType":"110","messageId":"111","endLine":3,"endColumn":25},{"ruleId":"108","severity":1,"message":"113","line":3,"column":27,"nodeType":"110","messageId":"111","endLine":3,"endColumn":30},{"ruleId":"108","severity":1,"message":"114","line":5,"column":25,"nodeType":"110","messageId":"111","endLine":5,"endColumn":32},{"ruleId":"108","severity":1,"message":"115","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":13},{"ruleId":"108","severity":1,"message":"116","line":2,"column":13,"nodeType":"110","messageId":"111","endLine":2,"endColumn":18},{"ruleId":"108","severity":1,"message":"117","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":19},{"ruleId":"108","severity":1,"message":"109","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":20},{"ruleId":"108","severity":1,"message":"112","line":5,"column":22,"nodeType":"110","messageId":"111","endLine":5,"endColumn":25},{"ruleId":"108","severity":1,"message":"113","line":5,"column":27,"nodeType":"110","messageId":"111","endLine":5,"endColumn":30},{"ruleId":"108","severity":1,"message":"114","line":7,"column":25,"nodeType":"110","messageId":"111","endLine":7,"endColumn":32},{"ruleId":"108","severity":1,"message":"115","line":8,"column":10,"nodeType":"110","messageId":"111","endLine":8,"endColumn":13},{"ruleId":"108","severity":1,"message":"118","line":13,"column":8,"nodeType":"110","messageId":"111","endLine":13,"endColumn":18},{"ruleId":"108","severity":1,"message":"119","line":9,"column":8,"nodeType":"110","messageId":"111","endLine":9,"endColumn":13},{"ruleId":"108","severity":1,"message":"120","line":15,"column":8,"nodeType":"110","messageId":"111","endLine":15,"endColumn":16},{"ruleId":"108","severity":1,"message":"121","line":16,"column":8,"nodeType":"110","messageId":"111","endLine":16,"endColumn":25},{"ruleId":"108","severity":1,"message":"122","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":19},{"ruleId":"108","severity":1,"message":"123","line":6,"column":72,"nodeType":"110","messageId":"111","endLine":6,"endColumn":77},{"ruleId":"108","severity":1,"message":"124","line":7,"column":21,"nodeType":"110","messageId":"111","endLine":7,"endColumn":26},{"ruleId":"108","severity":1,"message":"125","line":7,"column":28,"nodeType":"110","messageId":"111","endLine":7,"endColumn":38},{"ruleId":"108","severity":1,"message":"126","line":7,"column":40,"nodeType":"110","messageId":"111","endLine":7,"endColumn":51},{"ruleId":"108","severity":1,"message":"127","line":7,"column":53,"nodeType":"110","messageId":"111","endLine":7,"endColumn":69},{"ruleId":"108","severity":1,"message":"128","line":7,"column":71,"nodeType":"110","messageId":"111","endLine":7,"endColumn":80},{"ruleId":"108","severity":1,"message":"129","line":7,"column":101,"nodeType":"110","messageId":"111","endLine":7,"endColumn":105},{"ruleId":"108","severity":1,"message":"130","line":3,"column":15,"nodeType":"110","messageId":"111","endLine":3,"endColumn":26},{"ruleId":"108","severity":1,"message":"131","line":3,"column":63,"nodeType":"110","messageId":"111","endLine":3,"endColumn":72},{"ruleId":"108","severity":1,"message":"132","line":6,"column":52,"nodeType":"110","messageId":"111","endLine":6,"endColumn":63},{"ruleId":"108","severity":1,"message":"133","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":16},{"ruleId":"108","severity":1,"message":"134","line":7,"column":18,"nodeType":"110","messageId":"111","endLine":7,"endColumn":26},{"ruleId":"108","severity":1,"message":"135","line":7,"column":28,"nodeType":"110","messageId":"111","endLine":7,"endColumn":36},{"ruleId":"108","severity":1,"message":"136","line":7,"column":38,"nodeType":"110","messageId":"111","endLine":7,"endColumn":43},{"ruleId":"108","severity":1,"message":"137","line":8,"column":8,"nodeType":"110","messageId":"111","endLine":8,"endColumn":18},{"ruleId":"108","severity":1,"message":"138","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":25},"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Fab' is defined but never used.","'NavLink' is defined but never used.","'Add' is defined but never used.","'Realm' is defined but never used.","'useEffect' is defined but never used.","'RecordList' is defined but never used.","'Badge' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'FriendsChip' is defined but never used.","'Email' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControl' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'Chip' is defined but never used.","'AddLocation' is defined but never used.","'PersonAdd' is defined but never used.","'CardActions' is defined but never used.","'Delete' is defined but never used.","'MoreVert' is defined but never used.","'Favorite' is defined but never used.","'Share' is defined but never used.","'ChipsArray' is defined but never used.","'useState' is defined but never used."]